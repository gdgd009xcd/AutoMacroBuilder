1. レスポンスから次のtoken（と思われる）下記のパラメータを取得
   stepno 0～ の各レスポンスとその次のリクエストから下記のパラメータを抽出
1-1.hidden値のtokenと思われるパラメータ。(追跡箇所responsebody tokentype=1)
・nameにキーワード"token"（大文字小文字）を含む
　　　　 キーワード "SesID", "PHPSESSID", "jsessionid"等セッション値
　のうち、次ページのPOST/GETパラメータに渡している(name=value)が一致する。


1-2.Locationヘッダー(追跡箇所header tokentype=2)
    Location ヘッダーのGETパラメータ引き継ぎ
　　GETパラメータの内、次ページのリクエストに渡している（name=valueが一致する）もの。


1-3.hrefリンク(追跡箇所responsebody tokentype=3)
　　hrefリンクの内、次ページのリクエストに渡している（name=valueが一致する）GETパラメータ。

1-4.railsのリクエストヘッダーToken
    1) hidden値　authenticity_token をGET/POSTパラメータで引き継ぐ。－＞1-1で対応済み(tokentype=1)
    2) リクエストヘッダーにX-CSRF-Tokenを追加。内容はauthenticity_tokenの値。(追跡箇所 header tokentype=4)

1-5.その他
　　　特になし。

2. 取得した引き継ぎ値を次ページのリクエストのGET/POSTパラメータ、リクエストヘッダーに設定。
2-1. GET/POSTパラメータ引き継ぎ
　　　次ページのリクエストのGET/POSTパラメータを抽出。

      tokentype, nameが一致、value値が(固定値)に完全マッチする値

　　　正規表現　name=(固定値)

　　　tokenxxx=0234asjkfs123442jkl'||'&n=2....

      tokenxxx=(0234asjkfs123442jkl)

　　　form-dataも同様。

2-2. railsのtoken

     tokentype, nameが一致、
     +/=は、urlencodeされる。/はエンコードされない場合あり。
　　 value値が一致またはurldecodeした値が一致

　　　正規表現　([0-9a-zA-Z%/]+)


3.手順
3.1 プロジェクトディレクトリ、マクロ名指定
ParmVars.projectdirは起動時の初期ディレクトリ。
ParmVars.parmfileを基準とする。
FileChooserを起動。
ParmVars.parmfileの格納ディレクトリ
下のマクロ一覧(JSONファイル一覧)を表示。
一覧と同一マクロ名を指定した場合は、上書き確認ダイアログ表示。
実行ボタンで以降の手順でマクロ作成し、
ParmVars.parmfile
にマクロ、追跡パラメータを保存。

3.2 下記をマクロ昇順に繰り返す。
3.2.1 言語設定
※ページ毎のエンコードは、現状不要。
グローバルエンコード(ParmVars.enc)の設定。
マクロ先頭ページのresponse.charsetからEncodeを生成し、ParmVars.encに設定。


3.2.2 トークン
下記の1), 2)をマクロの先頭から最後まで繰り返す。
1) マクロのレスポンスをパースし、tokenを取り出す。
   tokenとＵＲＬペア　ParmGenResTokenに格納し、ArrayListに保管
   作成済みハッシュクリア
2) マクロのリクエストをパースし、
　　1)のArrayListを逆順(リクエストの直前から先頭に向かって)次の処理繰り返し
2.1) リクエストに、ParmGenResTokenのTokenKeyがマッチし、TokenKeyが作成済みハッシュになければ
　　引き継ぎパラメータを作成。
2.2)作成済みハッシュに引き継ぎパラメータ作成したTokenKeyを格納。



4.エンコード処理
4.1 グローバルエンコード

9.備考
・生成した引き継ぎパラメータ未保存のチェックが無い。
・マクロの保存機能が無い。

10. マクロ保存・読み込み
10.1 保存
    JSON level=0 name=CURRENTREQUEST value=int
    JSON level=1 name=PREQRES_LIST のarray　として保存
　　メンバー　name=PRequest  value=PRequest シリアル化し、BASE64化
             name=PResponse value=PResponse
　　　　　　　
             name=Host value=String
             name=Port value=int
             name=TargetRequest value=true/false
             name=Enable  value=true/false

10.2 ロード
　　　10.1の各メンバーを読み込む。
　　　　　
　　　
parseHTTPHeader
  binary (Apache commons codec)
  getHost hostname or IP
  getPort int portno
  boolean ssl true/false
  isrequest true/false

PRequestResponse
 String comments
 boolean disable
 boolean iserror
 
int currentrequest








